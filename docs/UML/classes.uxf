<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
// fontsize=14
fontfamily=FiraCode //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>13</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>663</y>
      <w>312</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>/game::Entity/
--
#mType: int
--
+Entity(type: int)
/+Tick()/
/+Render(target: sf::RenderTarget*)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1222</x>
      <y>403</y>
      <w>494</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>template=TData: Object
/Observable/
--
#mObservers: std::vector&lt;Observable&lt;TData&gt;&gt;
--
+Update()
+Subscribe(subscriber: Observer&lt;TData&gt;): int
/#triggered(): bool/
#emit(obj: TData)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1313</x>
      <y>286</y>
      <w>208</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>/ObservableBase/
--
--
/+Update()/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1235</x>
      <y>767</y>
      <w>455</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>template=TData: Object
Always
--
-mData: *TData
--
+Always(TData* data)
+Update()
+Subscribe(subscriber: Observer&lt;TData&gt;): int
#triggered(): bool
#emit(obj: TData)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1781</x>
      <y>559</y>
      <w>130</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>Empty
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1742</x>
      <y>793</y>
      <w>481</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>template=TData: Object
Never
--
+Update()
+Subscribe(subscriber: Observer&lt;TData&gt;): int
#triggered(): bool
#emit(obj: TData)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1300</x>
      <y>572</y>
      <w>39</w>
      <h>234</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1300</x>
      <y>572</y>
      <w>572</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0;420.0;130.0;420.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2275</x>
      <y>806</y>
      <w>390</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>OnKeyPress
--
-mKey: sf::Key
--
+KeyPress(key: sf::Key)
+Update()
+Subscribe(subscriber: Observer&lt;TData&gt;): int
#triggered(): bool
#emit(obj: Empty)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1339</x>
      <y>572</y>
      <w>1092</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt; (Empty)</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;820.0;100.0;820.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1937</x>
      <y>546</y>
      <w>182</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>Data Class that
contains no data
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1287</x>
      <y>988</y>
      <w>221</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>Triggers on every tick
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1742</x>
      <y>975</y>
      <w>182</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>Never triggers
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1508</x>
      <y>1092</y>
      <w>455</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>template=TData: Object
/Observer/
--
/+Callback(TData* data)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1755</x>
      <y>1300</y>
      <w>962</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>template=TData: Object, THandler: Object
MethodObserver
--
+MethodObserver(handler: *THandler, ObserverMethod&lt;TData, THandler&gt;)
+Callback(data: *TData)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1235</x>
      <y>1300</y>
      <w>494</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>template=TData: Object
FunctionObserver
--
+FunctionObserver(func: ObserverFunc&lt;TData&gt;)
+Callback(TData* data)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1638</x>
      <y>455</y>
      <w>78</w>
      <h>676</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0;40.0;500.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1430</x>
      <y>1170</y>
      <w>286</w>
      <h>169</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>200.0;10.0;200.0;60.0;10.0;60.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1677</x>
      <y>1170</y>
      <w>520</w>
      <h>169</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;380.0;60.0;380.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1807</x>
      <y>936</y>
      <w>39</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1898</x>
      <y>559</y>
      <w>65</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1378</x>
      <y>962</y>
      <w>39</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2028</x>
      <y>325</y>
      <w>390</w>
      <h>143</h>
    </coordinates>
    <panel_attributes>game::EventController
--
mEvents: std::map&lt;int, ObservableBase*&gt;
--
+AddEvent(key: int, event: ObservableBase*)
+GetEvent(key: int): ObservableBase*
+Tick()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1404</x>
      <y>351</y>
      <w>39</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1781</x>
      <y>351</y>
      <w>221</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>Not recommended as
this requires casting
better store typed
Observable as Variable
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>65</x>
      <y>221</y>
      <w>767</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>SceneGraph
--
mRoot: SceneGraphNode
--
+GetRoot(): SceneGraphNode*
+AddChild(parent: SceneGraphNode*, obj: TransformableGameObject*): SceneGraphNode*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>65</x>
      <y>364</y>
      <w>559</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>SceneGraphNode
--
-mObject: game::TransformableGameObject*
-mParent: game::SceneGraphNode*
--
+IsRoot(): bool
+GetCurTransform(): sf::Transform
+GetAccumulatedTransform(): sf::Transform


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2951</x>
      <y>0</y>
      <w>1014</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Singleton&gt;&gt;
game::GameWorldFactory
--
--
+CreateGameWorld(tilemapFile: std::string&amp;, materialMapFile: std::string&amp;, texturesPrefix: std::string&amp;): game::GameWorld*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>832</y>
      <w>416</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>/game::TransformableEntity/
--
#mGraphNode: game::SceneGraphNode*
--
+TransformableEntity(type: int)
+SetGraphNode(node game::SceneGraphNode*)
/+Tick()/
/+Render(target: sf::RenderTarget*)/
/+GetTransformable(): sf::Transformable*/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>1040</y>
      <w>455</w>
      <h>195</h>
    </coordinates>
    <panel_attributes>/game::SpriteTransformableEntity/
--
#mSprite: sf::Sprite*
#mGraphNode: game::SceneGraphNode*
--
+SpriteTransformableEntity(sprite: sf::Sprite*)
+SetGraphNode(node game::SceneGraphNode*)
/+Tick()/
+Render(target: sf::RenderTarget*)
+GetTransform(): sf::Transformable*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>676</x>
      <y>780</y>
      <w>39</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>676</x>
      <y>1001</y>
      <w>39</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>611</x>
      <y>247</y>
      <w>299</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>170.0;10.0;210.0;10.0;210.0;100.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>845</x>
      <y>715</y>
      <w>143</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>Allows to apply
transformations
on that object
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2899</x>
      <y>1274</y>
      <w>533</w>
      <h>169</h>
    </coordinates>
    <panel_attributes>template=TResource: Object
ResourceCache
--
#mResources: std::map&lt;std::string, TResource&gt;
--
+GetResource(identifier: std::string&amp;): TResource
/#createResource(identifier: std::string&amp;)/
/#destroyResource(resource: TResource)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2899</x>
      <y>1534</y>
      <w>442</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>game::TextureCache
--
#mResources: std::map&lt;std::string, sf::Texture*&gt;
--
+GetResource(identifier: std::string&amp;): sf::Texture*
#createResource(identifier: std::string&amp;)
#destroyResource(resource: sf::Texture*)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3120</x>
      <y>1430</y>
      <w>208</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt; (sf::Texture*)</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2340</x>
      <y>1066</y>
      <w>429</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Singleton&gt;&gt;
AssetManager
--
-mTextures: game::TextureCache
- ...
--
+GetTexture(identifier: std::string&amp;): sf::Texture*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2756</x>
      <y>1118</y>
      <w>260</w>
      <h>442</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;280.0;180.0;280.0;180.0;320.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3172</x>
      <y>533</y>
      <w>234</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::Tile
--
+Index: int
+X: int
+Y: int
+Rot: int
+FlipX: int
+FlipY: int
+Texture: sf::Texture*
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3237</x>
      <y>819</y>
      <w>364</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::TileLayer
--
+Name: string
+Tiles: game::Tile*[][]
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3627</x>
      <y>533</y>
      <w>338</w>
      <h>169</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::Tilemap
--
+Layers: std::vector&lt;game::TileLayer&gt;
+TileWidth: int
+TileHeight: int
+TilesWide: int
+TilesHigh: int
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>3640</x>
      <y>884</y>
      <w>234</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>[] simplified for std::array
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3588</x>
      <y>897</y>
      <w>78</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3068</x>
      <y>715</y>
      <w>195</w>
      <h>221</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;150.0;10.0;150.0;10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3497</x>
      <y>585</y>
      <w>156</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0;10.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3029</x>
      <y>299</y>
      <w>273</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::MaterialMap
--
+Materials: game::Material*[]
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3354</x>
      <y>312</y>
      <w>312</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::Material
--
+Solid: bool
+Destructive: bool
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>3042</x>
      <y>234</y>
      <w>234</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>Maps tileID to a Material
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3146</x>
      <y>260</y>
      <w>39</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3380</x>
      <y>130</y>
      <w>624</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>game::GameWorld
--
-mTileMap: game::TileMap*
-mMaterialMap: game::MaterialMap*
--
+GameWorld(tilemap: game::Tilemap*, materialMap: game::MaterialMap*)
+Tick()
+Render()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3393</x>
      <y>494</y>
      <w>91</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>50.0;10.0;50.0;180.0;10.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>3250</x>
      <y>468</y>
      <w>390</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>Mapped from Index on GameWorld creation
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3289</x>
      <y>351</y>
      <w>91</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>50.0;10.0;20.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1040</y>
      <w>455</w>
      <h>195</h>
    </coordinates>
    <panel_attributes>/game::AnimatedTransformableEntity/
--
#mSprite: sf::Sprite*
#mGraphNode: game::SceneGraphNode*
--
+SpriteGameObject(sprite: sf::Sprite*)
+SetGraphNode(node game::SceneGraphNode*)
/+Tick()/
+Render(target: sf::RenderTarget*)
+GetTransform(): sf::Transformable*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>923</x>
      <y>780</y>
      <w>65</w>
      <h>234</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;160.0;30.0;160.0;30.0;10.0</additional_attributes>
  </element>
</diagram>

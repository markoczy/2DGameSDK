<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
// fontsize=14
fontfamily=FiraCode //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>19</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>969</y>
      <w>456</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>/game::GameObject/
--
#mType: int
--
/+Tick()/
/+Render(target: sf::RenderTarget*)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1026</x>
      <y>589</y>
      <w>722</w>
      <h>266</h>
    </coordinates>
    <panel_attributes>template=TData: Object
/Observable/
--
#mObservers: std::vector&lt;Observable&lt;TData&gt;&gt;
--
+Update()
+Subscribe(subscriber: Observer&lt;TData&gt;): int
/#triggered(): bool/
#emit(obj: TData)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1159</x>
      <y>418</y>
      <w>304</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>/ObservableBase/
--
--
/+Update()/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1045</x>
      <y>1121</y>
      <w>665</w>
      <h>304</h>
    </coordinates>
    <panel_attributes>template=TData: Object
Always
--
-mData: *TData
--
+Always(TData* data)
+Update()
+Subscribe(subscriber: Observer&lt;TData&gt;): int
#triggered(): bool
#emit(obj: TData)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1843</x>
      <y>817</y>
      <w>190</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>Empty
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1786</x>
      <y>1159</y>
      <w>703</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>template=TData: Object
Never
--
+Update()
+Subscribe(subscriber: Observer&lt;TData&gt;): int
#triggered(): bool
#emit(obj: TData)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1140</x>
      <y>836</y>
      <w>57</w>
      <h>342</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1140</x>
      <y>836</y>
      <w>836</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0;420.0;130.0;420.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2565</x>
      <y>1178</y>
      <w>570</w>
      <h>266</h>
    </coordinates>
    <panel_attributes>OnKeyPress
--
-mKey: sf::Key
--
+KeyPress(key: sf::Key)
+Update()
+Subscribe(subscriber: Observer&lt;TData&gt;): int
#triggered(): bool
#emit(obj: Empty)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1197</x>
      <y>836</y>
      <w>1596</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt; (Empty)</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;820.0;100.0;820.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2071</x>
      <y>798</y>
      <w>266</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>Data Class that
contains no data
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1121</x>
      <y>1444</y>
      <w>323</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>Triggers on every tick
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1786</x>
      <y>1425</y>
      <w>266</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>Never triggers
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1444</x>
      <y>1596</y>
      <w>665</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>template=TData: Object
/Observer/
--
/+Callback(TData* data)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1805</x>
      <y>1900</y>
      <w>1406</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>template=TData: Object, THandler: Object
MethodObserver
--
+MethodObserver(handler: *THandler, ObserverMethod&lt;TData, THandler&gt;)
+Callback(data: *TData)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1045</x>
      <y>1900</y>
      <w>722</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>template=TData: Object
FunctionObserver
--
+FunctionObserver(func: ObserverFunc&lt;TData&gt;)
+Callback(TData* data)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1634</x>
      <y>665</y>
      <w>114</w>
      <h>988</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0;40.0;500.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1330</x>
      <y>1710</y>
      <w>418</w>
      <h>247</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>200.0;10.0;200.0;60.0;10.0;60.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1691</x>
      <y>1710</y>
      <w>760</w>
      <h>247</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;380.0;60.0;380.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1881</x>
      <y>1368</y>
      <w>57</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2014</x>
      <y>817</y>
      <w>95</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1254</x>
      <y>1406</y>
      <w>57</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2204</x>
      <y>475</y>
      <w>570</w>
      <h>209</h>
    </coordinates>
    <panel_attributes>game::EventController
--
mEvents: std::map&lt;int, ObservableBase*&gt;
--
+AddEvent(key: int, event: ObservableBase*)
+GetEvent(key: int): ObservableBase*
+Tick()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1292</x>
      <y>513</y>
      <w>57</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1843</x>
      <y>513</y>
      <w>323</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>Not recommended as
this requires casting
better store typed
Observable as Variable
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>361</y>
      <w>456</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>SceneGraph
--
mRoot: SceneGraphNode
--
GetRoot(): SceneGraphNode*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>532</y>
      <w>817</w>
      <h>247</h>
    </coordinates>
    <panel_attributes>SceneGraphNode
--
-mObject: game::TransformableGameObject*
-mParent: game::SceneGraphNode*
--
+IsRoot(): bool
+AddChild(obj: TransformableGameObject*): SceneGraphNode*
+GetCurTransform(): sf::Transform
+GetRootTransform(): sf::Transform


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3553</x>
      <y>0</y>
      <w>1482</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Singleton&gt;&gt;
game::GameWorldFactory
--
--
+CreateGameWorld(tilemapFile: std::string&amp;, materialMapFile: std::string&amp;, texturesPrefix: std::string&amp;): game::GameWorld*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1235</y>
      <w>608</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>/game::TransformableGameObject/
--
#mGraphNode: game::SceneGraphNode*
--
+SetGraphNode(node game::SceneGraphNode*)
/+Tick()/
/+Render(target: sf::RenderTarget*)/
/+GetTransform(): sf::Transformable*/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1520</y>
      <w>665</w>
      <h>285</h>
    </coordinates>
    <panel_attributes>/game::SpriteGameObject/
--
#mSprite: sf::Sprite*
#mGraphNode: game::SceneGraphNode*
--
+SpriteGameObject(sprite: sf::Sprite*)
+SetGraphNode(node game::SceneGraphNode*)
/+Tick()/
+Render(target: sf::RenderTarget*)
+GetTransform(): sf::Transformable*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>228</x>
      <y>1121</y>
      <w>57</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>228</x>
      <y>1444</y>
      <w>57</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>437</x>
      <y>399</y>
      <w>171</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0;70.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>665</x>
      <y>1406</y>
      <w>190</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>Current only
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>589</x>
      <y>1406</y>
      <w>114</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>323</x>
      <y>817</y>
      <w>266</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>Root to this node
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>399</x>
      <y>760</y>
      <w>57</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3477</x>
      <y>1862</y>
      <w>779</w>
      <h>247</h>
    </coordinates>
    <panel_attributes>template=TResource: Object
ResourceCache
--
#mResources: std::map&lt;std::string, TResource&gt;
--
+GetResource(identifier: std::string&amp;): TResource
/#createResource(identifier: std::string&amp;)/
/#destroyResource(resource: TResource)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3477</x>
      <y>2242</y>
      <w>646</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>game::TextureCache
--
#mResources: std::map&lt;std::string, sf::Texture*&gt;
--
+GetResource(identifier: std::string&amp;): sf::Texture*
#createResource(identifier: std::string&amp;)
#destroyResource(resource: sf::Texture*)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3800</x>
      <y>2090</y>
      <w>304</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt; (sf::Texture*)</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2660</x>
      <y>1558</y>
      <w>627</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Singleton&gt;&gt;
AssetManager
--
-mTextures: game::TextureCache
- ...
--
+GetTexture(identifier: std::string&amp;): sf::Texture*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3268</x>
      <y>1634</y>
      <w>380</w>
      <h>646</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;280.0;180.0;280.0;180.0;320.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3876</x>
      <y>779</y>
      <w>342</w>
      <h>304</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::Tile
--
+Index: int
+X: int
+Y: int
+Rot: int
+FlipX: int
+FlipY: int
+Texture: sf::Texture*
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3971</x>
      <y>1197</y>
      <w>532</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::TileLayer
--
+Name: string
+Tiles: game::Tile*[][]
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4541</x>
      <y>779</y>
      <w>494</w>
      <h>247</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::Tilemap
--
+Layers: std::vector&lt;game::TileLayer&gt;
+TileWidth: int
+TileHeight: int
+TilesWide: int
+TilesHigh: int
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>4560</x>
      <y>1292</y>
      <w>342</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>[] simplified for std::array
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4484</x>
      <y>1311</y>
      <w>114</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3724</x>
      <y>1045</y>
      <w>285</w>
      <h>323</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;150.0;10.0;150.0;10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4351</x>
      <y>855</y>
      <w>228</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0;10.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3667</x>
      <y>437</y>
      <w>399</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::MaterialMap
--
+Materials: game::Material*[]
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4142</x>
      <y>456</y>
      <w>456</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::Material
--
+Solid: bool
+Destructive: bool
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>3686</x>
      <y>342</y>
      <w>342</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>Maps tileID to a Material
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3838</x>
      <y>380</y>
      <w>57</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4180</x>
      <y>190</y>
      <w>912</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>game::GameWorld
--
-mTileMap: game::TileMap*
-mMaterialMap: game::MaterialMap*
--
+GameWorld(tilemap: game::Tilemap*, materialMap: game::MaterialMap*)
+Tick()
+Render()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4199</x>
      <y>722</y>
      <w>133</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>50.0;10.0;50.0;180.0;10.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>3990</x>
      <y>684</y>
      <w>570</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>Mapped from Index on GameWorld creation
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4047</x>
      <y>513</y>
      <w>133</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>50.0;10.0;20.0;10.0;10.0;10.0</additional_attributes>
  </element>
</diagram>

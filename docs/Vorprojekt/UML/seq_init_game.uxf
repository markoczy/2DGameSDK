<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=10
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLSequenceAllInOne</id>
    <coordinates>
      <x>0</x>
      <y>372</y>
      <w>1050</w>
      <h>942</h>
    </coordinates>
    <panel_attributes>title=Game Initialization
obj=GameWorldFactory~gwf
obj=scene: SceneGraph~sg CREATED_LATER EXECUTION
obj=Main Loop~main
obj=game: Game~game CREATED_LATER EXECUTION
obj=eventController: EventController~ec CREATED_LATER EXECUTION

on=main

// Create Game World
main-&gt;&gt;&gt;gwf: CreateGameWorld(...); on=gwf
gwf-&gt;gwf + :loadTilemap(...)
on=gwf
off=gwf
gwf-&gt;gwf + :loadTextures(...)
on=gwf
off=gwf
gwf.&gt;main: world: GameWorld*; off=gwf

// Create Scene
main-&gt;&gt;&gt;sg: new()
sg.&gt;main; off=sg
main-&gt;&gt;&gt;sg: GetRoot(...); on=sg;
sg.&gt;main: root: SceneGraphNode*; off=sg
combinedFragment=loop~loop1 main main; main:[More Entities to create...]
main-&gt;main + :new Entity(...)
on=main
main-&gt;main + :entity;off=main
tick=
main-&gt;main + :root.AddChild(entity)
on=main
off=main; --=loop1

// Create Game
main-&gt;main + :createOptions(...)
on=main
main-&gt;main + :options; off=main
tick=
main-&gt;&gt;&gt;game: new(options, world, scene)
game-&gt;&gt;&gt;ec: new()
ec-&gt;game :eventController: EventController*; off=ec
game.&gt;main: game: Game*; off=game

// Add Events
combinedFragment=loop~loop2 main ec; main:[More Events to watch...]
main-&gt;&gt;&gt;game: AddEvent(event); on=game;
game-&gt;&gt;&gt;ec: AddEvent(event); on=ec;
ec.&gt;game: eventId: int; off=ec;
game.&gt;main: eventId: int; off=game;
--=loop2;

// Run Game
main-&gt;&gt;&gt;game: Run(); on=game;
game-&gt;game + :init()
on=game
off=game
tick=
combinedFragment=loop~loop4 game game; game:[interrupted == false]
game-&gt;game + :tick()
on=game
off=game
game-&gt;game + :render()
on=game
off=game
--=loop4;
tick=
game.&gt;main: errorCode: int; off=game

off=main</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>804</x>
      <y>1056</y>
      <w>114</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>bg=yellow
See detailed Description
in "Game Loop" sequence diagram</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>804</x>
      <y>1080</y>
      <w>18</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;30.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>636</x>
      <y>1098</y>
      <w>390</w>
      <h>138</h>
    </coordinates>
    <panel_attributes>Game Loop
layer=1
bg=white
transparency=0</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>

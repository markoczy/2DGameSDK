<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
// fontsize=14
fontfamily=FiraCode //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>384</x>
      <y>480</y>
      <w>272</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>game::TextureCache
--
#mResources: std::map&lt;std::string, sf::Texture*&gt;
--
+GetResource(identifier: std::string&amp;): sf::Texture*
#createResource(identifier: std::string&amp;)
#destroyResource(resource: sf::Texture*)
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>416</y>
      <w>128</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt; (sf::Texture*)
group=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>384</x>
      <y>320</y>
      <w>328</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>template=TResource: Object
ResourceCache
--
#mResources: std::map&lt;std::string, TResource&gt;
--
+GetResource(identifier: std::string&amp;): TResource
/#createResource(identifier: std::string&amp;)/
/#destroyResource(resource: TResource)/
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>280</x>
      <y>400</y>
      <w>176</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
group=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;200.0;60.0;200.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>88</x>
      <y>328</y>
      <w>264</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Singleton&gt;&gt;
AssetManager
--
-mTextures: game::TextureCache
--
+GetTexture(identifier: std::string): sf::Texture*
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>64</x>
      <y>280</y>
      <w>672</w>
      <h>304</h>
    </coordinates>
    <panel_attributes>Asset
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>40</x>
      <y>24</y>
      <w>720</w>
      <h>584</h>
    </coordinates>
    <panel_attributes>Core</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>72</x>
      <y>64</y>
      <w>392</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>game::Game
--
-mOptions: GameOptions
-mState: GameState
-mEventCtrl: EventController
--
+Game(options: GameOptions, scene: *SceneGraph, world: *GameWorld)
+Run()
+Stop()
-tick()
-render()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>576</x>
      <y>64</y>
      <w>160</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::GameOptions
--
Title: std::string 
ScreenDim: sf::Vector2i
InitialZoom: float
FramesPerSecond: int
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>576</x>
      <y>168</y>
      <w>160</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::GameState
--
Scene: *SceneGraph
World: *GameWorld
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>456</x>
      <y>96</y>
      <w>136</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;110.0;150.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>456</x>
      <y>80</y>
      <w>136</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>56</x>
      <y>664</y>
      <w>240</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>game::EventController
--
mEvents: std::map&lt;int, ObservableBase*&gt;
--
+AddEvent(key: int, event: ObservableBase*)
+GetEvent(key: int): ObservableBase*
+Tick()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>288</x>
      <y>680</y>
      <w>88</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>56</x>
      <y>928</y>
      <w>280</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>template=TData: Object
Always
--
-mData: *TData
--
+Always(TData* data)
+Update()
+Subscribe(subscriber: Observer&lt;TData&gt;): int
#triggered(): bool
#emit(obj: TData)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>88</x>
      <y>1064</y>
      <w>136</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>Triggers on every tick
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>144</x>
      <y>1048</y>
      <w>24</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>128</x>
      <y>880</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>128</x>
      <y>880</y>
      <w>336</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt; (Empty)</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;400.0;40.0;400.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>56</x>
      <y>776</y>
      <w>304</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>template=TData: Object
/Observable/
--
#mObservers: std::vector&lt;Observable&lt;TData&gt;&gt;
--
+Update()
+Subscribe(subscriber: Observer&lt;TData&gt;): int
/#triggered(): bool/
#emit(obj: TData)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>360</x>
      <y>664</y>
      <w>128</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>/ObservableBase/
--
--
/+Update()/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>168</x>
      <y>704</y>
      <w>248</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>290.0;10.0;290.0;80.0;10.0;80.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>368</x>
      <y>936</y>
      <w>240</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>OnKeyPress
--
-mKey: sf::Key
--
+KeyPress(key: sf::Key)
+Update()
+Subscribe(subscriber: Observer&lt;TData&gt;): int
#triggered(): bool
#emit(obj: Empty)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>368</x>
      <y>848</y>
      <w>80</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>Empty
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>464</x>
      <y>840</y>
      <w>112</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>Data Class that
contains no data
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>848</y>
      <w>40</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>40</x>
      <y>632</y>
      <w>632</w>
      <h>680</h>
    </coordinates>
    <panel_attributes>Event</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>312</x>
      <y>808</y>
      <w>328</w>
      <h>304</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;390.0;10.0;390.0;330.0;220.0;330.0;220.0;360.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>376</x>
      <y>1088</y>
      <w>280</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>template=TData: Object
/Observer/
--
/+Callback(TData* data)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>56</x>
      <y>1224</y>
      <w>496</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>template=TData: Object, THandler: Object
MethodObserver
--
+MethodObserver(handler: *THandler, ObserverMethod&lt;TData, THandler&gt;)
+Callback(data: *TData)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>56</x>
      <y>1128</y>
      <w>304</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>template=TData: Object
FunctionObserver
--
+FunctionObserver(func: ObserverFunc&lt;TData&gt;)
+Callback(TData* data)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>336</x>
      <y>1136</y>
      <w>120</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;130.0;80.0;10.0;80.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>312</x>
      <y>1136</y>
      <w>144</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;10.0;160.0;40.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1224</x>
      <y>968</y>
      <w>280</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>/game::AnimatedTransformableEntity/
--
#mSprite: sf::Sprite*
#mGraphNode: game::SceneGraphNode*
--
+AnimatedTransformableEntity(type: int, 
     animationStates: std::map&lt;int, sf::Texture*&gt;)
/+Tick()/
+Render(target: sf::RenderTarget*)
+GetTransform(): sf::Transformable*
+SetAnimState(state: int)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>912</x>
      <y>968</y>
      <w>280</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>/game::SpriteTransformableEntity/
--
#mSprite: sf::Sprite*
#mGraphNode: game::SceneGraphNode*
--
+SpriteTransformableEntity(type: int, tex: sf::Texture*)
/+Tick()/
+Render(target: sf::RenderTarget*)
+GetTransform(): sf::Transformable*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1248</x>
      <y>816</y>
      <w>256</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>/game::TransformableEntity/
--
#mGraphNode: game::SceneGraphNode*
--
+TransformableEntity(type: int)
+SetGraphNode(node game::SceneGraphNode*)
/+Tick()/
/+Render(target: sf::RenderTarget*)/
/+GetTransformable(): sf::Transformable*/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1176</x>
      <y>896</y>
      <w>88</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>90.0;20.0;10.0;20.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1112</x>
      <y>856</y>
      <w>88</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Allows to apply
transformations
on that object
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1248</x>
      <y>664</y>
      <w>192</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>/game::Entity/
--
#mType: int
--
+Entity(type: int)
/+Tick()/
/+Render(target: sf::RenderTarget*)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1344</x>
      <y>736</y>
      <w>24</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>712</x>
      <y>664</y>
      <w>472</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>game::SceneGraph
--
mRoot: SceneGraphNode
--
+GetRoot(): SceneGraphNode*
+AddChild(parent: SceneGraphNode*, entity: TransformableEntity*): SceneGraphNode*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1048</x>
      <y>680</y>
      <w>176</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>170.0;10.0;200.0;10.0;200.0;140.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>712</x>
      <y>784</y>
      <w>344</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>game::SceneGraphNode
--
-mObject: game::TransformableEntity*
-mParent: game::SceneGraphNode*
--
+IsRoot(): bool
+GetCurTransform(): sf::Transform
+GetAccumulatedTransform(): sf::Transform


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>696</x>
      <y>632</y>
      <w>824</w>
      <h>488</h>
    </coordinates>
    <panel_attributes>Scene</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>968</x>
      <y>752</y>
      <w>152</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0;170.0;10.0;170.0;90.0;110.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1048</x>
      <y>800</y>
      <w>264</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;310.0;10.0;310.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1048</x>
      <y>832</y>
      <w>216</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>250.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1048</x>
      <y>920</y>
      <w>328</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>390.0;10.0;390.0;40.0;10.0;40.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1352</x>
      <y>920</y>
      <w>24</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>800</x>
      <y>160</y>
      <w>384</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>game::GameWorld
--
-mTileMap: game::TileMap*
-mMaterialMap: game::MaterialMap*
--
+GameWorld(tilemap: game::Tilemap*, materialMap: game::MaterialMap*)
+Tick()
+Render()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>976</x>
      <y>536</y>
      <w>240</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>Mapped from Index on GameWorld creation
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>808</x>
      <y>432</y>
      <w>144</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::Tile
--
+Index: int
+X: int
+Y: int
+Rot: int
+FlipX: int
+FlipY: int
+Texture: sf::Texture*
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1008</x>
      <y>424</y>
      <w>224</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::TileLayer
--
+Name: string
+Tiles: game::Tile*[][]
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1248</x>
      <y>352</y>
      <w>208</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::Tilemap
--
+Layers: std::vector&lt;game::TileLayer&gt;
+TileWidth: int
+TileHeight: int
+TilesWide: int
+TilesHigh: int
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1248</x>
      <y>472</y>
      <w>144</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>[] simplified for std::array
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1224</x>
      <y>472</y>
      <w>40</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>776</x>
      <y>24</y>
      <w>704</w>
      <h>560</h>
    </coordinates>
    <panel_attributes>World</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>800</x>
      <y>288</y>
      <w>192</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::Material
--
+Solid: bool
+Destructive: bool
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>984</x>
      <y>296</y>
      <w>88</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0;50.0;40.0;90.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1056</x>
      <y>288</y>
      <w>168</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
game::MaterialMap
--
+Materials: game::Material*[]
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1176</x>
      <y>176</y>
      <w>192</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>220.0;220.0;220.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1128</x>
      <y>192</y>
      <w>104</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;100.0;110.0;100.0;110.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>944</x>
      <y>544</y>
      <w>48</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1168</x>
      <y>384</y>
      <w>96</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>944</x>
      <y>440</y>
      <w>80</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>80.0;50.0;40.0;50.0;40.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>800</x>
      <y>64</y>
      <w>624</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Singleton&gt;&gt;
game::GameWorldFactory
--
--
+CreateGameWorld(tilemapFile: std::string&amp;, materialMapFile: std::string&amp;, texturesPrefix: std::string&amp;): game::GameWorld*
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
